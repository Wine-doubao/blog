(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{563:function(t,s,a){"use strict";a.r(s);var n=a(12),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("涉及语句、变量")])]),t._v(" "),a("h2",{attrs:{id:"语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[t._v("#")]),t._v(" 语句")]),t._v(" "),a("h3",{attrs:{id:"for-of语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-of语句"}},[t._v("#")]),t._v(" for-of语句")]),t._v(" "),a("ol",[a("li",[t._v("for-of用于遍历可迭代对象的元素")]),t._v(" "),a("li",[t._v("可迭代对象必须实现Symbol.iterator方法，这个方法必须返回一个有next方法的对象，for-of循环会按照next()产生值的顺序迭代元素")]),t._v(" "),a("li",[t._v("next()返回的结果格式必须为"),a("code",[t._v("{done: Boolean, value: any}")]),t._v("，当done = true时，表示迭代结束，否则value是for-of要取得的下一个值")]),t._v(" "),a("li",[t._v("Symbol.iterator方法会被for-of自动调用，如果没有找到对象的这个方法会报错")]),t._v(" "),a("li",[t._v("数组和字符串是使用最广泛的内置可迭代对象，也可以通过给普通对象添加Symbol.iterator方法使其能用for-of循环")])]),t._v(" "),a("h3",{attrs:{id:"for-in语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in语句"}},[t._v("#")]),t._v(" for-in语句")]),t._v(" "),a("ol",[a("li",[t._v("for-in用于枚举对象中的非符号键属性，所谓的非符号键属性即对象中key不为Symbol的属性")]),t._v(" "),a("li",[t._v("如果要迭代的变量是null或undefined，则不执行循环体")]),t._v(" "),a("li",[t._v("for-in和Object.keys(myObject)都用于枚举对象属性，但for-in遍历会包括对象的原型方法和属性，而Object.keys()不包括")])]),t._v(" "),a("p",[a("strong",[t._v("注")]),t._v("：for-in和for-of都可以用来遍历数组，但for-in遍历的是数组的索引（且返回的索引是string型的），而for-of遍历的数组元素值（是number型的）")]),t._v(" "),a("h3",{attrs:{id:"标签语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签语句"}},[t._v("#")]),t._v(" 标签语句")]),t._v(" "),a("ol",[a("li",[t._v("语法：label:statement，label是标识符，statement是js语句，典型的应用场景是嵌套循环")]),t._v(" "),a("li",[t._v("可以使用一个标签唯一标记一个循环，然后使用break或continue语句来指示程序是否中断循环或继续执行")]),t._v(" "),a("li",[t._v("因为JavaScript没有goto语句，标记只能和break或continue一起使用，break可以用于任何标记语句，而continue只可用于循环标记语句\n如下栗子，在满足条件时通过loop1跳到最外层循环继续执行：")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nloop1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tloop2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" loop1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i = '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("', j = '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"原始值与引用值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原始值与引用值"}},[t._v("#")]),t._v(" 原始值与引用值")]),t._v(" "),a("p",[t._v("当把一个值赋给变量时，JavaScript引擎必须确定这个值是原始值还是引用值。保存原始值的变量是"),a("strong",[t._v("按值访问")]),t._v("的，保存引用值的变量是"),a("strong",[t._v("按引用访问")]),t._v("的。引用值是保存在内存中的对象，与其他语言不同，JavaScript不允许直接访问内存位置，因此也就不能直接操作对象所在的内存空间。在操作对象时，"),a("strong",[t._v("实际上操作的是对该对象的引用而非实际的对象本身")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("只有引用值可以动态添加属性")]),t._v("，虽然给原始值添加属性不会报错，但静默无效")])]),t._v(" "),a("li",[a("p",[t._v("原始值的复制是两个独立的变量，而引用值的复制两个变量的指针指向的是同一个对象")])]),t._v(" "),a("li",[a("p",[t._v("ECMAScript中所有函数的参数都是"),a("strong",[t._v("按值传递")]),t._v("的。这意味着传参即"),a("strong",[t._v("将函数外的变量复制到一个局部变量（即一个命名参数）")])]),t._v(" "),a("ul",[a("li",[t._v("当参数是一个原始值时，在函数内修改传递过来的参数，不会影响函数外的那个原始值变量")]),t._v(" "),a("li",[t._v("当参数是一个引用值时，如下栗子：")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\tobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nicholas"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj = new Object(); ")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//obj.name = "Greg"; ')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Nicholas"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("person被传给setName()方法，并复制到参数obj中，在函数内部，person和obj指向的是同一个对象。**即使对象是按值传进函数的，obj也会通过引用访问对象！！**所以当函数内修改obj时，person也会反映这个变化。"),a("strong",[t._v("但并不意味着参数就是按引用传递的")]),t._v('，上面栗子的第三四行取消注释，最后的结果也一样，obj被设置为一个新对象，改为指向name为"Greg"的对象，如果person是按引用传递的，那么person应该自动将指针改为指向name为"Greg"的对象，但当再次访问person.name的时候，它的值依然是"Nicholas"，这表明函数中参数的值改变之后，原始的引用仍然没变。')])]),t._v(" "),a("li",[a("p",[t._v("typeof操作符用于判断一个变量是什么类型的，但无法分辨对象的具体类型；instanceof操作符解决了这个问题，如果变量是给定引用类型（由其原型链决定）的实例，则该操作符返回true，如 person instanceof Array用于判断person是否为数组对象，如果是则返回true否则返回false")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);